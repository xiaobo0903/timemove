worker_processes  1;

error_log  logs/error.log debug;

events {
    worker_connections  1024;
}

rtmp {
    server {
        listen 1935;

        application myapp {
            live on;

            hls on;
            hls_path /home/thumbnail/myapp;#视频流存放地址
	    hls_fragment_naming system;
            hls_fragment 5s;
            hls_playlist_length 30s;
            hls_continuous on; #连续模式。
            hls_cleanup off;    #对多余的切片进行删除。
            hls_nested on;     #嵌套模式。

            record keyframes;
            record_path /home/thumbnail;
#            record_max_size 2048K;
            record_max_frames 1;
            record_interval 5s;
            record_suffix _myapp.flv;

            #on_publish http://localhost:8080/publish;
            #on_play http://localhost:8080/play;
            #exec_record_done ffmpeg -y -i $path -acodec libmp3lame -ar 44100 -ac 1 -vcodec libx264 $dirname/$basename.mp4;
            #exec_record_done ffmpeg -y -i $path -vf select='eq(pict_type\,I)' -vsync 2 -f image2 $dirname/$basename.jpg & tm.sh $dirname/index.m3u8 $name $basename;
            exec_record_done tm.sh $dirname/myapp/$name/index.m3u8 $basename;
            #exec_record_done echo $dirname/hls/$name/index.m3u8 $basename >$dirname/kkk.ll;

        }
    }
}

http {
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"'
                       '$upstream_addr $upstream_response_time $request_time ';

    access_log  logs/access.log  main;

    #proxy_cache_path /tmp/cache levels=1:2 keys_zone=thumbnail_cache:10m max_size=4g inactive=60m use_temp_path=off;

    lua_package_path "/usr/local/nginx/lua/lua-resty-redis/lib/?.lua;;";

    server {

        listen	 80;
#默认lua_code_cache是开的，为了调试现在关闭，运行时需要打开这个设置
        lua_code_cache off;


#	location /thumbnail {
#		
#      	    proxy_cache thumbnail_cache; 
#            proxy_cache_methods GET HEAD POST; 
#            proxy_cache_min_uses 1; 
#            proxy_cache_valid 200 302 304 60s; 
#            proxy_cache_valid 404 60s; 
#            proxy_cache_key "$host:$server_port$uri$is_args$args"; 
#  
#            proxy_redirect off; 
#            proxy_set_header Host $host; 
#            proxy_set_header X-Real-IP $remote_addr; 
#            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; 
#            #proxy_pass http://localhost/$2_$1.jpg; 
#            add_header  Nginx-Cache "$upstream_cache_status";
#            proxy_pass http://127.0.0.1:11080/; 
#
#	}

	location /myapp {

        	root    /home/thumbnail;

                #判断是否是直播或者时移业务，时移操作判断mvtm=字段是否存在，如果存在则认为是直播支持时移的，如果没有则认为不支持时移操作；

                if ( $arg_mvtm ~ \d*[1-9]\d* ) {

                    rewrite ^(.*)/(.*)/(.*)/(.*)$  http://192.168.2.81/mvtm$uri?app=$2&ch=$3 break;
                   
                }

	}

        location ~ ^/mvtm/(.*).m3u8$  {

            #    root    /home/thumbnail;
            content_by_lua_file lua/mvtm.lua;
        }  

        location ~ ^/mvtm/(.*).ts$ {

             rewrite ^/mvtm/(.*)$ http://192.168.2.81/vod/$1 break;
	}

        location /vod {

	     alias /home/thumbnail/;
	}

	location /hello {
            default_type 'text/plain';
           # content_by_lua 'ngx.say("hello, lua")';
        }

    }

    server {

        listen 11080;

	location / {

            root /home/thumbnail;

	}
    }


    server {
        listen      8080;

        location /stat {
            rtmp_stat all;
            rtmp_stat_stylesheet stat.xsl;
        }

        location /stat.xsl {
            root /path/to/nginx-rtmp-module/;
        }

        location /control {
            rtmp_control all;
        }

        #location /publish {
        #    return 201;
        #}

    }
}

